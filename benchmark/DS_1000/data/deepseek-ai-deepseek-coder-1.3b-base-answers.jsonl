{"id": 0, "code": "result = df.iloc[List]\n", "metadata": {"problem_id": 0, "library_problem_id": 0, "library": "Pandas", "test_case_cnt": 1, "perturbation_type": "Origin", "perturbation_origin_id": 0}}
{"id": 1, "code": "df.loc[List,:]\n", "metadata": {"problem_id": 1, "library_problem_id": 1, "library": "Pandas", "test_case_cnt": 1, "perturbation_type": "Difficult-Rewrite", "perturbation_origin_id": 0}}
{"id": 2, "code": "result = df.copy()\nresult['Qu1'] = result['Qu1'].apply(lambda x: 'other' if x not in ['cheese', 'potato', 'banana', 'apple', 'egg'] else x)\nresult['Qu2'] = result['Qu2'].apply(lambda x: 'sausage' if x not in ['banana', 'apple'] else x)\nresult['Qu3'] = result['Qu3'].apply(lambda x: 'other' if x not in ['cheese', 'potato', 'banana', 'apple', 'egg'] else x)\n", "metadata": {"problem_id": 2, "library_problem_id": 2, "library": "Pandas", "test_case_cnt": 2, "perturbation_type": "Origin", "perturbation_origin_id": 2}}
{"id": 3, "code": "result = df.copy()\nresult['Qu1'] = result['Qu1'].apply(lambda x: 'other' if x not in result['Qu1'].value_counts()[result['Qu1'].value_counts() >= 3].index else x)\nresult['Qu2'] = result['Qu2'].apply(lambda x: 'other' if x not in result['Qu2'].value_counts()[result['Qu2'].value_counts() >= 3].index else x)\nresult['Qu3'] = result['Qu3'].apply(lambda x: 'other' if x not in result['Qu3'].value_counts()[result['Qu3'].value_counts() >= 3].index else x)\n", "metadata": {"problem_id": 3, "library_problem_id": 3, "library": "Pandas", "test_case_cnt": 2, "perturbation_type": "Semantic", "perturbation_origin_id": 2}}
{"id": 4, "code": "\n    ### END SOLUTION\n    return result\n\nprint(f())\n", "metadata": {"problem_id": 4, "library_problem_id": 4, "library": "Pandas", "test_case_cnt": 2, "perturbation_type": "Surface", "perturbation_origin_id": 2}}
{"id": 5, "code": "result = pd.to_numeric(s, errors='coerce')\n", "metadata": {"problem_id": 5, "library_problem_id": 5, "library": "Pandas", "test_case_cnt": 2, "perturbation_type": "Difficult-Rewrite", "perturbation_origin_id": 2}}
